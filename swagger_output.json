{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Todo List Api's",
    "description": "Todo List Api's In Node Backend"
  },
  "host": "localhost:5000",
  "basePath": "/api",
  "tags": [],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your bearer token in the format **Bearer &lt;token>**"
    },
    "oAuthSample": {
      "type": "oauth2",
      "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "read_pets": "read your pets",
        "write_pets": "modify pets in your account"
      }
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user-update/{id}": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "Api to update user",
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "firstname": {
                  "type": "string",
                  "example": "firstname"
                },
                "lastname": {
                  "type": "string",
                  "example": "lastname"
                },
                "email": {
                  "type": "string",
                  "example": "email"
                },
                "gender": {
                  "type": "string",
                  "example": "gender"
                },
                "mobile_number": {
                  "type": "string",
                  "example": "7778889990"
                },
                "password": {
                  "type": "string",
                  "example": "password"
                }
              },
              "required": [
                "firstname",
                "lastname",
                "email",
                "gender",
                "mobile_number",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated successfully"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Api to get users",
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Fetched successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Api to get users",
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetched successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/delete-user/{id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Api to delete user",
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted succesfully!"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/current-user": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Api to check current user on the basis of token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User details fetched!"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user-register": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Api to create user",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "firstname": {
                  "type": "string",
                  "example": "firstname"
                },
                "lastname": {
                  "type": "string",
                  "example": "lastname"
                },
                "email": {
                  "type": "string",
                  "example": "email"
                },
                "gender": {
                  "type": "string",
                  "example": "gender"
                },
                "mobile_number": {
                  "type": "string",
                  "example": "7778889990"
                },
                "password": {
                  "type": "string",
                  "example": "password"
                }
              },
              "required": [
                "firstname",
                "lastname",
                "email",
                "gender",
                "mobile_number",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data inserted!"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user-login": {
      "post": {
        "tags": [
          "Login"
        ],
        "description": "Api to login",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "shubhambhatt@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "Abc@123"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token generated"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/create-todo": {
      "post": {
        "tags": [
          "Todo"
        ],
        "description": "Api to create todo",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "task_details": {
                  "type": "string",
                  "example": "Jogging"
                },
                "todo_time": {
                  "type": "string",
                  "example": "2021-05-15 18:27:06"
                },
                "status": {
                  "type": "string",
                  "example": "completed"
                }
              },
              "required": [
                "task_details",
                "todo_time",
                "status"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Todo created!"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/update-todo/{id}": {
      "put": {
        "tags": [
          "Todo"
        ],
        "description": "Api to update todo",
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "task_details": {
                  "type": "string",
                  "example": "Jogging"
                },
                "todo_time": {
                  "type": "string",
                  "example": "2021-05-15 18:27:06"
                },
                "status": {
                  "type": "string",
                  "example": "completed"
                }
              },
              "required": [
                "task_details",
                "todo_time",
                "status"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Todo updated!"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/view-todo": {
      "get": {
        "tags": [
          "Todo"
        ],
        "description": "Api to view todo list",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Todo list fetched!"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/view-todo/{id}": {
      "get": {
        "tags": [
          "Todo"
        ],
        "description": "Api to view todo",
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "any"
                },
                "id": {
                  "type": "string",
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Todo details fetched!"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/delete-todo/{id}": {
      "delete": {
        "tags": [
          "Todo"
        ],
        "description": "Api to delete todo",
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "any"
                },
                "id": {
                  "type": "string",
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Todo deleted!"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "definitions": {},
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}